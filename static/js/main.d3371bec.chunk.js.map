{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","components/Footer/Footer.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/corona.png","components/Footer/Footer.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","BASE_URL","fetchData","country","a","changeAbleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialData","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","barChart","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","fetchedCountriesAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","App","state","fetchCountryChangeData","setState","apiData","this","src","coronaImage","image","alt","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3371bec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport {Card, CardContent,Typography,Grid} from '@material-ui/core'\nimport styles from './Cards.module.css'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\nconst Cards=({data:{confirmed, recovered, deaths,lastUpdate}}) =>{\n    if(!confirmed){\n        return 'Loading...'\n    }\n    //console.log(confirmed,recovered,deaths,lastUpdate)\n    return (\n        <div className={styles.container}>\n           <Grid container spacing={3} justify=\"center\">\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\n                <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                    <Typography variant=\"h5\"><CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" /></Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\n               </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\n                <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                   <Typography variant=\"h5\"><CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" /></Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n               </CardContent>\n            </Grid>\n            <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\n                <CardContent>\n                   <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                   <Typography variant=\"h5\"><CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" /></Typography>\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                   <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n               </CardContent>\n            </Grid>\n           </Grid>\n        </div>\n    )\n}\n\nexport default Cards\n","import axios from 'axios'\n\n\nconst BASE_URL='https://covid19.mathdro.id/api'\n\nexport const fetchData= async (country)=>{\n    let changeAbleUrl=BASE_URL\n    if(country){\n        changeAbleUrl=`${BASE_URL}/countries/${country}`\n    }\n    try {\n        const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeAbleUrl);\n        return {confirmed,recovered,deaths,lastUpdate}\n    } catch (error) {\n        console.log(error)\n        \n    }\n}\n\nexport const fetchDailyData= async () => {\n    try {\n        const {data} = await axios.get(`${BASE_URL}/daily`)\n        const modifiedData=data.map(dailyData =>({\n            confirmed:dailyData.confirmed.total,\n            deaths:dailyData.deaths.total,\n            date:dailyData.reportDate\n        }))\n        return modifiedData\n    } catch (error) {\n        console.log(error)\n        \n    }\n}\n\nexport const fetchCountries = async ()=>{\n    try {\n        const {data:{countries}}= await axios.get(`${BASE_URL}/countries`)\n        return countries.map((country)=>country.name)\n    } catch (error) {\n        console.log(error)\n        \n    }\n}","import React,{useState,useEffect} from 'react'\nimport {fetchDailyData} from '../../api'\nimport {Line, Bar } from 'react-chartjs-2'\nimport styles from './Chart.module.css'\n\nconst Chart=({data:{confirmed,recovered,deaths},country}) =>{\n//init data\n    const [dailyData,setDailyData]=useState([])\n\n    useEffect(() =>{\n        const fetchAPI= async () =>{\n            const initialData = await fetchDailyData()\n            setDailyData(initialData)\n        }\n        fetchAPI()\n        // console.log(dailyData)\n    },[])\n\n    const lineChart=(\n       dailyData.length?(\n       <Line\n            data={{\n                labels:dailyData.map(({date})=>date),\n                datasets:[{\n                   label:'Infected',\n                   data:dailyData.map(({confirmed})=>confirmed),\n                   borderColor:'#3333ff',\n                   fill:true\n                },{\n                    label:'Deaths',\n                    data:dailyData.map(({deaths})=>deaths),\n                    borderColor:'rgba(255,0,0,0.5)',\n                    fill:true\n                 }],\n            }}\n        />\n       ):null\n    )\n    const barChart=(\n        confirmed?(\n            <Bar\n            data={{\n                labels:['Infected','Recovered','Deaths'],\n                datasets:[{\n                    label:'People',\n                    backgroundColor:[\n                        'rgba(0, 0, 255, 0.5)',\n                        'rgba(0, 255, 0, 0.5)',\n                        'rgba(255, 0, 0, 0.5)',\n                    ],\n                    data:[confirmed.value,recovered.value,deaths.value]\n                }]\n            }}\n            options={{\n                legend:{display:false},\n                title:{display:true,text:`Current state in ${country}`},\n            }}\n            />\n        ):null\n    )\n    return (\n        <div className={styles.container}>\n\n           {country? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Chart\n","import React,{useState,useEffect} from 'react';\nimport {NativeSelect,FormControl} from '@material-ui/core'\nimport styles from './CountryPicker.module.css'\nimport {fetchCountries} from '../../api'\n\nconst CountryPicker=({handleCountryChange}) =>{\n    const [countries, setCountries]=useState([])\n\n    useEffect(()=>{\n        const fetchedCountriesAPI= async ()=>{\n            setCountries(await fetchCountries())\n        }\n\n        fetchedCountriesAPI()\n        //console.log(countries)\n    },[])\n\n    return (\n       <FormControl className={styles.formControl}>\n           <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\n               <option value=\"\">Global</option>\n               {\n                   countries.map((country,i)=><option key={i} value={country}>{country}</option>)\n               }\n           </NativeSelect>\n       </FormControl>\n    )\n}\n\nexport default CountryPicker","import React from 'react'\nimport {Typography} from '@material-ui/core'\nimport styles from './Footer.module.css'\n\nfunction Footer() {\n    return (\n        <div className={styles.container}>\n           <Typography color=\"textSecondary\" gutterBottom>2020@Created by Md Tajmul Alam</Typography>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Component } from 'react'\n\nimport {Cards,Chart,CountryPicker} from './components'\nimport styles from './App.module.css'\nimport {fetchData} from './api'\nimport coronaImage from './images/corona.png'\nimport Footer from './components/Footer/Footer'\n\nclass App extends Component {\n    state={\n     data:{},\n     country:''\n    }\n\n\n   async componentDidMount(){\n        const apiData = await fetchData()\n        this.setState({data:apiData})\n    }\n    handleCountryChange= async (country)=>{\n        const fetchCountryChangeData= await fetchData(country)\n        //console.log(fetchCountryChangeData)\n        this.setState({data:fetchCountryChangeData, country:country})\n    }\n    render() {\n        const{ data,country }= this.state\n        return (\n            <div className={styles.container}>\n                <img src={coronaImage} className={styles.image} alt=\"COVID-19\"/>\n               <Cards data={data}></Cards>\n               <CountryPicker handleCountryChange={this.handleCountryChange}></CountryPicker>\n               <Chart data={data} country={country}></Chart>\n               <Footer/>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nReactDom.render(<App/>, document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\",\"container\":\"CountryPicker_container__2vyxG\"};","module.exports = __webpack_public_path__ + \"static/media/corona.d7265326.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__st7Zp\"};"],"sourceRoot":""}